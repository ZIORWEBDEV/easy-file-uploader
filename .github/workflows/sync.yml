name: Merge Free Version into PRO Repository

on:
  push:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Free Version (Public)
        uses: actions/checkout@v4
        with:
          repository: ZIORWebDev/easy-file-uploader
          fetch-depth: 0  # Fetch full history

      - name: Clone the PRO Repository
        env:
          GH_TOKEN: ${{ secrets.PRO_REPO_PAT }}
        run: |
          # Clone the PRO repository
          git clone https://x-access-token:${GH_TOKEN}@github.com/ZIORWebDev/easy-file-uploader-pro.git pro-repo
          cd pro-repo

          # Fetch all branches to ensure develop exists
          git fetch origin
          if git show-ref --verify --quiet refs/remotes/origin/develop; then
            git checkout develop
          else
            git checkout -b develop
            git push origin develop
          fi

          # Add Free repo as remote and fetch its main branch
          git remote add free https://github.com/ZIORWebDev/easy-file-uploader.git || echo "Remote already exists"
          git fetch free main

          # Set Git user identity to avoid commit errors
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Attempt to merge with conflict resolution
          git merge free/main --allow-unrelated-histories -X theirs || (
            echo "Merge conflict detected. Resolving by forcing Free's version..."

            # Forcefully take Free's version for all files, not just the conflicted ones
            git checkout --theirs .  # This will checkout all files from free/main
            git add .
            git commit -m "Forcefully resolved conflicts and merged updates from easy-file-uploader/main into develop"
          )

          # Push the merged changes
          git push origin develop
